{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/API.jsx"],"sourcesContent":["const API_BASE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://127.0.0.1:8000\" // Development backend URL\r\n    : \"https://your-production-url.com\"; // Production backend URL\r\n\r\nexport default API_BASE_URL;\r\n"],"names":[],"mappings":";;;;;AAAA,MAAM,eACJ,uCACI,wBAAwB,0BAA0B;yCACf,yBAAyB;uCAEnD"}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/product/[id]/page.jsx"],"sourcesContent":["// app/products/[id]/page.js (Server Component)\r\nimport React from \"react\";\r\nimport ProductDetailClient from \"./ProductDetailClient\"; // Import the Client Component\r\nimport API_BASE_URL from \"@/utils/API\";\r\n\r\nasync function fetchProduct(id) {\r\n  const res = await fetch(`${API_BASE_URL}/api/products/${id}`, {\r\n    cache: \"no-store\",\r\n  });\r\n  if (!res.ok) {\r\n    throw new Error(\"Failed to fetch product\");\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport default async function ProductDetail({ params: { id } }) {\r\n  const product = await fetchProduct(id); // Fetch product data\r\n  return (\r\n    <section className=\"py-12 sm:py-16\">\r\n      <div className=\"container mx-auto px-4\">\r\n        {/* Pass product data to the Client Component */}\r\n        <ProductDetailClient product={product} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;;;;;;;;;;;;;AAC/C,OAAO,WAAW,QAAQ;AAC1B,OAAO,yBAAyB,wBAAwB,CAAC,8BAA8B;;AAGvF,eAAe,aAAa,EAAE;IAC5B,MAAM,MAAM,MAAM,MAAM,CAAC,EAAE,aAAa,cAAc,EAAE,GAAG,CAAC,EAAE;QAC5D,OAAO;IACT;IACA,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,IAAI,MAAM;IAClB;IACA,OAAO,IAAI,IAAI;AACjB;AAEe,eAAe,cAAc,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE;IAC5D,MAAM,UAAU,MAAM,aAAa,KAAK,qBAAqB;IAC7D,qBACE,QAAC;QAAQ,WAAU;kBACjB,cAAA,QAAC;YAAI,WAAU;sBAEb,cAAA,QAAC;gBAAoB,SAAS;;;;;;;;;;;;;;;;AAItC;KAV8B"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}